Exercício: modelagem de conta corrente
Crie um conjunto de classes para representar as contas correntes dos clientes de um banco. Os objetos devem armazenar os dados pessoais dos clientes (Nome, CPF, RG e Endereço), informações da conta (agência, número e saldo), além de informações sobre tipos de clientes e de contas. O Endereço deve ser completo com logradouro, número, complemento, CEP, cidade, estado. Uma conta pode ser individual (único cliente) ou conjunta (mais de um cliente). Um cliente pode ser comum ou especial. As contas também podem ser do tipo corrente comum, poupança e corrente preferencial. Apenas clientes especiais podem ser titulares de contas preferenciais.  As contas devem possuir um saldo e métodos para depositar, sacar e transferir valores entre contas. As taxas cobradas por transações bancárias (retirada, depósito e transferência) variam de acordo com seu tipo.  Contas de poupança não possuem custos de depósito  e só podem realizar transferências para contas correntes de mesma titularidade. Contas preferenciais possuem taxas reduzidas desde que o saldo seja superior a 50 mil reais (antes da transação). As classes devem possuir métodos que exibem um sumário dos dados (cliente e conta). As contas devem fornecer um extrato contendo pelo menos o saldo.

Como exemplo de uso, escreva um método main que crie 3 clientes e 3 contas correntes. Desses 3 clientes, 2 deles são um casal que moram no mesmo endereço e possuem uma conta conjunta. Um desses clientes possui também uma conta poupança individual. O outro cliente deve ser especial e possuir uma conta corrente preferencial individual. Seu exemplo deve evitar duplicação de dados. Por exemplo, o mesmo endereço não deve aparecer duplicado em dois locais diferentes da memória, nem os dados de um mesmo cliente. O exemplo deve fazer operações de depósito, saque e transferências e exibir o saldo das contas depois de cada operação. Seu exemplo deve guardar os clientes e contas em listas (ArrayLists) e usar polimorfismo para simplificar as chamadas aos métodos no exemplo de uso.

Lembrem-se da conveniência de criar um método
public String toString()
nas suas classes, para pode exibir informações facilmente.
